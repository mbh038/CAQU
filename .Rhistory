daytimes<-unique(times)
daytimes
str(daytimes)
ptimes<-as.POSIXlt(daytimes)
rm(list=ls())
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM10.diurnal<-numeric()
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
PM10.Diurnal[1]<-subset(dg$PM10,dg$times==daytimes[1])
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM10.diurnal<-numeric()
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
PM10.diurnal[1]<-subset(dg$PM10,dg$times==daytimes[1])
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM10.diurnal<-numeric()
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
PM10.diurnal<-subset(dg$PM10,dg$times==daytimes[1])
head(PM10.diurnal,20)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM10.means<-numeric()
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM10.means[i]<-mean(subset(dg$PM10,dg$times==daytimes[i]) )
}
PM10.diurnal<-data.frame(daytimes,PM10.means)
PM10.diurnal
with(PM10.diurnal,plot(daytimes,PM10.means))
ggplot(PM10.diurnal,aes(x=daytimes,y=PM10.means))+geom_line()
ggplot(PM10.diurnal,aes(x=daytimes,y=PM10.means))+geom_point()
str(dg)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means<-data.frame()
PM2.5.means<-numeric()
PM1.means<-numeric()
WS.means<-numeric()
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]<-mean(subset(dg$PM10,dg$times==daytimes[i]) )
}
str(PM.means)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PM all= integer(0), PM10 = character(0))
PM2.5.means<-numeric(0),PM1.means<-numeric(0),WS.means<-numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg$[PM10[,j],dg$times==daytimes[i]) )
}
}
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PM all= integer(0), PM10 = character(0))
PM2.5.means<-numeric(0),PM1.means<-numeric(0),WS.means<-numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
PM.means
head(PM.means)
str(PM.means)
plot(PM.means$V6)
summary(PM.means)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall= integer(0), PM10 = character(0))
PM2.5<-numeric(0),PM1<-numeric(0),WS<-numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall= integer(0), PM10 = character(0))
PM2_5<-numeric(0),PM1<-numeric(0),WS<-numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
rm(list=ls())
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall= integer(0), PM10 = character(0))
PM2_5<-numeric(0),PM1<-numeric(0),WS<-numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
warnings()
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall=numeric(0), PM10=numeric(0))
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
str(PM.means)
plot(WS)
with(PM.means,plot(WS))
with(PM.means,plot(WS))
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=daytimes[i]
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
warnings()
str(daytimes)
str(PM.means)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=factor(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
head(PM.means)
warnings(5)
warnings()
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= character(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0),stringsasfactors=FALSE)
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= POSIXlt(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= numeric(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
head(PM.means)
plot(Time,WS)
with(PM.means,plot(Time,WS))
with(PM.means,plot(WS))
with(PM.means,plot(WS))
ggplot(PM.means)+geom_points()+facet_wrap(~Time)
ggplot(PM.means)+geom_point()+facet_wrap(~Time)
str(PM.means)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= numeric(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=i#as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
ggplot(PM.means)+geom_point()
ggplot(PM.means,aes(x=Time))+geom_point()
ggplot(PM.means,aes(x=Time))+geom_point()
with(PM.means,ggplot(PM.means,aes(x=Time))+geom_point())
head(PM.means)
attach(PM.means)
ggplot(PM.means,aes(x=Time,y=PMall))+geom_point()
detach(PM.means)
ggplot(PM.means,aes(x=Time,y=PMall))+geom_point()
ggplot(melt(PM.Means[2:6]),aes(x=variable,y=value))+geom_point()+facet_wrap(~value)
ggplot(melt(PM.means[2:6]),aes(x=variable,y=value))+geom_point()+facet_wrap(~value)
ggplot(melt(PM.means[2:6]),aes(x=variable,y=value))+geom_point()+facet_wrap(~variable)
ggplot(melt(PM.means[2:6]),aes(x=Time,y=value))+geom_point()+facet_wrap(~value)
test<-melt(PM.means[2:6])
head(test)
ggplot(melt(PM.means[,2:6]),aes(x=Time,y=value))+geom_point()+facet_wrap(~value)
ggplot(melt(PM.means[,2:6]),aes(x=variable,y=value))+geom_point()+facet_wrap(~value)
ggplot(melt(PM.means[,2:6]),aes(x=variable,y=value))+geom_point()+facet_wrap(~variable)
ggplot(melt(PM.means[,2:6]),aes(x=Time,y=value))+geom_point()+facet_wrap(~variable)
ggplot(melt(PM.means,id.vars="Time"),aes(x=Time,y=value))+geom_point()+facet_wrap(~variable)
test<-melt(PM.means,id.vars="Time")
test
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= numeric(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=i#as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
ggplot(melt(PM.means,id.vars="Time"),aes(x=Time,y=value))+geom_point()+facet_wrap(~variable)
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
PM.means <- data.frame(Time= numeric(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
for (i in 1:nt){
PM.means[i,1]=i#as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
ggplot(melt(PM.means,id.vars="Time"),aes(x=Time,y=value))+geom_point()+
facet_wrap(~variable,scales="free_y")
ggplot(dg,aes(x=WD))+geom_density()
ncol(dg)
cor(dg[,2:8])
head(dg)
cor(dg[,2:7])
?cor
ggplot(dg,aes(x=WS))+geom_density()
#Read in data, renamer columns and delete empty columns
d<-read.csv("TNO2245Data_1429877310388.csv")
colnames(d)<-c("TimeStamp","TP","PM10","PM2.5","PM1","T","H","WS","WD","GPS")
d<-subset(d,select=-c(T,H,GPS))
#retain only values where all PM data are valid
dg<-subset(d,PM10 > 0 & PM2.5 > 0 & PM1 > 0 & WS>0)
#Convert TimeStamp to POSIXlt format
dg$TimeStamp<-as.POSIXlt(strptime(dg$TimeStamp, format= "%d/%m/%Y %T"))
nr<-nrow(dg)
#set up empty data frame for the mean values
PM.means <- data.frame(Time= numeric(0), PMall=numeric(0), PM10=numeric(0),
PM2_5=numeric(0),PM1=numeric(0),WS=numeric(0))
#create vector of times of day at which measurements are taken
times<-with(dg,paste(TimeStamp$hour,":",TimeStamp$min,sep=""))
dg<-cbind(dg,times)
daytimes<-unique(times)
nt=length(daytimes)
#find means for each variable at each time of day
for (i in 1:nt){
PM.means[i,1]=i#as.character(daytimes[i])
for (j in 2:6){
PM.means[i,j]<-mean(subset(dg[,j],dg$times==daytimes[i]) )
}
}
ggplot(melt(PM.means,id.vars="Time"),aes(x=Time,y=value))+geom_point()+
facet_wrap(~variable,scales="free_y")
ggplot(dg,aes(x=WS))+geom_density()
dim(dg)
summary(dg)
with(dg,max(WS))
with(dg,max(PMall))
with(PM.means,max(PMall))
with(PM.WS,max(PMall))
with(PM.means,max(WS))
